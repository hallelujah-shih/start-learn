pcre_jit on;

worker_processes  1;

events {
    worker_connections  1024;
}

error_log /dev/stdout debug;

stream {
    log_format basic '$remote_addr [$time_local] ' 
        '$protocol $status $bytes_sent $bytes_received '
        '$session_time';

    map $ssl_preread_protocol $upstream {
        ""           http;
        default      https;
    }

    upstream http {
        server unix:/tmp/http-proxy.sock;
    }

    upstream https {
        server unix:/tmp/tls-proxy.sock;
    }

    server {
        listen 443;

        proxy_pass $upstream;
        proxy_protocol on;
        ssl_preread on;
    }

    server {
        listen 80;

        proxy_pass $upstream;
        proxy_protocol on;
        ssl_preread on;
    }
}

http {
    lua_package_path "/etc/nginx/lua/?.lua;;";
    server_tokens on;
    access_log /dev/stdout;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen unix:/tmp/tls-proxy.sock ssl http2 proxy_protocol;

        ssl_certificate /etc/nginx/ssl/ca-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/ca-priv.pem;

        real_ip_header proxy_protocol;
        set_real_ip_from unix:;

        location /lua {
            lua_need_request_body on;
            content_by_lua_block {
                ngx.say('Hello lua')
            }
        }

        location /hello {
            hello;
        }

        location /world {
            world "world cmd one arg!(https)\n";
        }
    }

    server {
        listen unix:/tmp/http-proxy.sock proxy_protocol;

        real_ip_header proxy_protocol;
        set_real_ip_from unix:;

        location /lua {
            lua_need_request_body on;
            content_by_lua_block {
                ngx.say('Hello lua')
            }
        }

        location /hello {
            hello;
        }

        location /world {
            world "world cmd one arg!(http)\n";
        }
    }

    server {
        listen 888;

        location /lua {
            lua_need_request_body on;
            content_by_lua_block {
                ngx.say('Hello lua')
            }
        }

        location /hello {
            hello;
        }

        location /world {
            world "world cmd one arg!(http)\n";
        }
    }


    server {
        listen unix:/tmp/http-proxy.pub;

        location /lua {
            lua_need_request_body on;
            content_by_lua_block {
                ngx.say('Hello lua')
            }
        }

        location /hello {
            hello;
        }

        location /world {
            world "world cmd one arg!(http)\n";
        }
    }
}
